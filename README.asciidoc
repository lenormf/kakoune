= image:{logo}[K,30,30,link="{website}"] Kakoune image:{travis-img}[link="{travis-url}"] image:{irc-img}[link="{irc-url}"]
ifdef::env-github,env-browser[:outfilesuffix: .asciidoc]
:logo: https://rawgit.com/mawww/kakoune/master/doc/kakoune_logo.svg
:website: http://kakoune.org
:travis-img: https://travis-ci.org/mawww/kakoune.svg?branch=master
:travis-url: https://travis-ci.org/mawww/kakoune
:irc-img: https://img.shields.io/badge/IRC-%23kakoune-blue.svg
:irc-url: https://webchat.freenode.net/?channels=kakoune
:icons: font
:toc: right
:pp: ++

TL;DR
-----

{website}

*Modal editor* -- *Faster as in fewer keystrokes* --
*Multiple selections* -- *Orthogonal design*

---------------------------------------------
git clone http://github.com/mawww/kakoune.git
cd kakoune/src
make
./kak
---------------------------------------------

See http://github.com/mawww/golf for kakoune solutions to vimgolf challenges,
regularly beating the best Vim solution.

See the link:doc/design.asciidoc[design document] for more information on
Kakoune philosophy and design.

:numbered:

Introduction
------------

Kakoune is a code editor that implements Vi's "keystrokes as a text editing
language" model. As it's also a modal editor, it is somewhat similar to the
Vim editor (after which Kakoune was originally inspired).

Kakoune can operate in two modes, normal and insertion. In insertion mode,
keys are directly inserted into the current buffer. In normal mode, keys
are used to manipulate the current selection and to enter insertion mode.

Kakoune has a strong focus on interactivity, most commands provide immediate
and incremental results, while still being competitive (as in keystroke count)
with Vim.

Kakoune works on selections, which are oriented, inclusive range of characters,
selections have an anchor and a cursor character. Most commands move both of
them, except when extending selection where the anchor character stays fixed
and the cursor one moves around.

See http://vimeo.com/82711574

Join us on freenode IRC `#Kakoune`

Features
~~~~~~~~

 * Multiple selections as a central way of interacting
 * Powerful selection manipulation primitives
   - Select all regex matches in current selections
   - Keep selections containing/not containing a match for a given regex
   - Split current selections with a regex
   - Text objects (paragraph, sentence, nestable blocks)
 * Powerful text manipulation primitives
   - Align selections
   - Rotate selection contents
   - Case manipulation
   - Indentation
   - Piping each selection to external filter
 * Client-Server architecture
   - Multiple clients on the same editing session
   - Use tmux or your X11 window manager to manage windows
 * Simple interaction with external programs
 * Automatic contextual help
 * Automatic as you type completion
 * Macros
 * Hooks
 * Syntax Highlighting
   - Supports multiple languages in the same buffer
   - Highlight a buffer differently in different windows

Screenshots
~~~~~~~~~~~

[[screenshot-i3]]
.Kakoune in i3
image::doc/screenshot-i3.gif[Kakoune in i3]

[[screenshot-tmux]]
.Kakoune in tmux
image::doc/screenshot-tmux.gif[Kakoune in tmux]

Getting started
---------------

Building
~~~~~~~~

Kakoune dependencies are:

 * A {cpp}14 compliant compiler (GCC >= 5 or clang >= 3.9) along with its
   associated {cpp} standard library (libstdc{pp} or libc{pp})
 * ncurses with wide-characters support (>= 5.3, generally referred to as libncursesw)
 * asciidoc (for the `a2k` tool), to generate man pages

To build, just type *make* in the src directory.
To generate man pages, type *make man* in the src directory.

Kakoune can be built on Linux, MacOS, and Cygwin. Due to Kakoune relying heavily
on being in a Unix-like environment, no native Windows version is planned.

Installing
~~~~~~~~~~

In order to install kak on your system, rather than running it directly from
its source directory, type *make install*, you can specify the `PREFIX` and
`DESTDIR` if needed.

[TIP]
.Homebrew (macOS) or Linuxbrew
====
---------------------------------
brew install kakoune
---------------------------------
====

[TIP]
.Fedora supported versions and Rawhide
====
Use the https://copr.fedoraproject.org/coprs/jkonecny/kakoune/[copr]
repository.

---------------------------------
dnf copr enable jkonecny/kakoune
dnf install kakoune
---------------------------------
====

[TIP]
.Arch Linux
====
Kakoune is found in the https://www.archlinux.org/packages/community/x86_64/kakoune/[repositories].
--------------------------------------------------
pacman -S kakoune
--------------------------------------------------
====

[TIP]
.Gentoo
====
Kakoune is found in portage as
https://packages.gentoo.org/packages/app-editors/kakoune[app-editors/kakoune]
====

[TIP]
.Exherbo
====
--------------------------------
cave resolve -x repository/mawww
cave resolve -x kakoune
--------------------------------
====

[TIP]
.openSUSE
====
kakoune can be found in the
https://build.opensuse.org/package/show/editors/kakoune[editors] devel
project.  Make sure to adjust the link below to point to the repository of
your openSUSE version.

---------------------------------------------------------------------------------------------------
#Example for Tumbleweed:
sudo zypper addrepo http://download.opensuse.org/repositories/editors/openSUSE_Factory/editors.repo
sudo zypper refresh
sudo zypper install kakoune
---------------------------------------------------------------------------------------------------
====

[TIP]
.Ubuntu
====
Building on Ubuntu 16.04.
Make sure you have .local/bin in your path to make the kak binary available from your shell.

----------------------------------------------------------------
sudo apt install libncursesw5-dev asciidoc
git clone https://github.com/mawww/kakoune.git && cd kakoune/src
make
PREFIX=$HOME/.local make install
----------------------------------------------------------------
====

[TIP]
.FreeBSD
====
Kakoune is available in the official ports tree as
https://www.freshports.org/editors/kakoune[editors/kakoune].

A binary package is also available and can be installed with
--------------------------------------------------
pkg install kakoune
--------------------------------------------------
====

[TIP]
.Solus
====
Kakoune is available in the Solus stable repository.

It can be installed with
---------------------
eopkg install kakoune
---------------------
====

Running
~~~~~~~

Just running *kak* launch a new kak session with a client on local terminal.
Run *kak -help* to discover the valid <<doc/kak.1#options,command line flags>>.

Configuration
^^^^^^^^^^^^^

There are two directories containing Kakoune's scripts:

* `runtime`: located in `../share/kak/` relative to the `kak` binary
  contains the system scripts, installed with Kakoune.
* `userconf`: located in `$XDG_CONFIG_HOME/kak/`, which will fallback
  to `$HOME/.config/kak/` if `$XDG_CONFIG_HOME` is not set, containing
  the user configuration.

Unless `-n` is specified, Kakoune will load its startup script located
at `${runtime}/kakrc` relative to the `kak` binary. This startup script
is responsible for loading the user configuration.

First, Kakoune will search recursively for `.kak` files in the `autoload`
directory. It will first look for an `autoload` directory at
`${userconf}/autoload` and will fallback to `${runtime}/autoload` if
it does not exist.

Once all those files are loaded, Kakoune will try to source
`${runtime}/kakrc.local` which is expected to contain distribution provided
configuration.

And finally, the user configuration will be loaded from `${userconf}/kakrc`.

NOTE: If you create a user `autoload` directory in `${userconf}/autoload`,
the system one at `${runtime}/autoload` will not be loaded anymore. You can
add a symbolic link to it (or to individual scripts) inside
`${userconf}/autoload` to keep loading system scripts.

Documentation
~~~~~~~~~~~~~

Make sure to use the `:doc` command in the editor to browse the topic-based
documentation.

You can also read it directly in the repository, in the link:doc/pages/[`doc`
directory].
