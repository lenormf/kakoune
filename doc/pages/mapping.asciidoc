= Mapping

== Description

Creating and removing shortcuts boils down to the following commands,
respectively:

------------------------------------------
map [switches] <scope> <mode> <key> <keys>
unmap <scope> <mode> <key> [<expected>]
------------------------------------------

The *map* command makes *key* behave as if the *keys* sequence was typed.

*mode* dictates in what context the mapping will be available:

    *goto*::
        when the goto key is hit (default: `g`)

    *insert*::
        insert mode

    *menu*::
        menus displayed with the `:menu` command

    *normal*::
        normal mode

    *object*::
        when an object selection is triggered (e.g. `<a-i>`, see
        <<keys#object-selection,`:doc keys object-selection`>>)

    *prompt*::
        prompts, such as when entering a command after hitting *:*, or a
        regex after hitting */*

    *user*::
        when the user prefix is hit (default: `,`)

    *view*::
        when the view key is hit (default: `v`)

The context of execution of the above modes is always the current one at the
time of execution of the mapping, except for *user* mode (always executed
in a *normal* context). Refer to <<modes#,`:doc modes`>> for more details.

An optional *-docstring* switch followed by a string can be used to describe
what the mapping does. This docstring will be used in autoinfo boxes.

The *unmap* command removes a mapping of *key* in the given *scope* and
*mode*. If *expected* is specified, the mapping is removed only if it is
set to the same sequence of keys passed using the *expected* argument.

For more information about the values of the *scope* parameter, refer to
<<scopes#,`:doc scopes`>>.

== Mappable keys

See <<keys#,`:doc keys`>> for a list of all default bindings.

The *key* and *keys* arguments to the *map* command can be any of the
following:

*x*, *<x>*::
    regular keys, written in their ASCII form. Keys can also be wrapped
    in angle-brackets for consistency with the other keys described below.

*<c-x>*::
    holding down Control while hitting the *x* key (see
    <<keys#key-syntax,`:doc keys key-syntax`>>).

*<a-x>*::
    holding down Alt while hitting the *x* key (see <<keys#key-syntax,`:doc
    keys key-syntax`>>).

*<s-x>*, *X*, *<X>*, *<s-X>*::
    holding down Shift while hitting the *x* key (see <<keys#key-syntax,`:doc
    keys key-syntax`>>).

*<c-a-x>*::
    holding down Control and Alt while hitting the *x* key (see <<keys#key-syntax,`:doc
    keys key-syntax`>>).

*<lt>*, *<gt>*::
    the *<* and *>* characters.

*<plus>*, *<minus>*::
    the *+* and *-* characters.

*<ret>*::
    the Return or Enter key.

*<space>*::
    the Space bar.

*<tab>*::
    the Tab key.

*<backspace>*::
    the Backspace (delete to the left) key.

*<del>*::
    the Delete (to the right) key.

*<esc>*::
    the Escape key.

*<up>*, *<down>*, *<left>*, *<right>*::
*<pageup>*, *<pagedown>*, *<home>*, *<end>*::
    the usual cursor-movement keys.

*<f1>*, *<f2>*, ...*<f12>*::
    function keys.

NOTE: Although Kakoune allows many key combinations to be mapped, not every
possible combination can be triggered. For example, due to limitations in
the way terminals handle control characters, mappings like *<c-s-a>* are
unlikely to work in Kakoune's terminal UI.
