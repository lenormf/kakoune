= Registers

== Description

Registers are named lists of text -instead of simply text- in order to interact
well with multiselection. They are used for various purposes, like storing
the last yanked text, or the captured groups associated with the selections.

== Interacting

*<c-r> `c`*::
    when in insert mode or in a prompt, insert the value stored in the
    *c* register (single character).

*"* `c`::
    in normal mode, select register *c* (single character).

== Alternative names

Non alphanumeric registers have an alternative name that can be used
in contexts where only alphanumeric identifiers are possible,
e.g. `$kak_reg_dquote` in shell.

== Default registers

Most primitives using a register default to a specific one if not specified:

*"* (dquote)::
    copy register, used by yanking and pasting primitives like *y*, *p*
    and *R*.

*/* (slash)::
    search register, used by regex based primitives like *s*, ***,
    */* or *<a-k>*.

*@* (arobase)::
    macro register, used by *q* and *Q*.

*^* (caret)::
    mark register, used by *z* and *Z*.

*|* (pipe)::
    shell commands register, used by primitives that spawn a subshell such
    as *|*, *<a-|>*, *!* or *<a-!>*.

== Special registers

Some registers are not general purpose, they cannot be written to, but they
contain special data:

*%* (percent)::
    name of the current buffer.

*.* (dot)::
    contents of the current selection.

*#* (hash)::
    selection indices (first selection has 1, second has 2, ...).

*_* (underscore)::
    null register, always empty.

*:* (colon)::
    last entered command.

== Integer registers

Registers *1* to *9* hold the grouped sub-matches of the regular
expression used to make the last selection.

Example: applying the following regular expression to the date of the day
would put the day of the week in register *1*, the month in register *2*,
and the day of the month in register *3*, but select the entire date:

--------------------
(\w+) (\w+) (\d+) .+
--------------------
